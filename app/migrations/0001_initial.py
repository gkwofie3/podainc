# Generated by Django 5.0.4 on 2024-08-02 14:59

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Calsheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sheet_id', models.IntegerField(verbose_name='Sheet Id')),
                ('tag', models.CharField(max_length=225, verbose_name='Tag number')),
                ('description', models.CharField(max_length=225, verbose_name='Instrument description')),
                ('variable', models.CharField(max_length=225, verbose_name='Measuring variable')),
                ('inst_type', models.CharField(max_length=225, verbose_name='Instrument type')),
                ('device_type', models.CharField(max_length=225, verbose_name='Device type')),
                ('serial_number', models.CharField(default='', max_length=225, verbose_name='serial Number')),
                ('model_number', models.CharField(default='', max_length=225, verbose_name='Model Number')),
                ('unit', models.CharField(max_length=225, verbose_name='Unit')),
                ('manufacturer', models.CharField(max_length=225, verbose_name='Manufacturer')),
                ('location', models.CharField(default='', max_length=225, verbose_name='Location')),
                ('lower_limit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('upper_limit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('lower_range', models.DecimalField(decimal_places=2, max_digits=10)),
                ('upper_range', models.DecimalField(decimal_places=2, max_digits=10)),
                ('deviation_type', models.CharField(max_length=225, verbose_name='None')),
                ('afdesire', models.CharField(default='0,0,0,0,0,0', max_length=225, verbose_name='As found Desire')),
                ('afactual', models.CharField(default='0,0,0,0,0,0', max_length=225, verbose_name='As found Actual')),
                ('aferror', models.CharField(default='0,0,0,0,0,0', max_length=225, verbose_name='As found error')),
                ('aldesire', models.CharField(default='0,0,0,0,0,0', max_length=225, verbose_name='As left Desire')),
                ('alactual', models.CharField(default='0,0,0,0,0,0', max_length=225, verbose_name='As left Actual')),
                ('alerror', models.CharField(default='0,0,0,0,0,0', max_length=225, verbose_name='As left error')),
                ('calibration_date', models.DateField(auto_now_add=True)),
                ('next_cal_due_date', models.DateField()),
                ('expiry', models.DateField(verbose_name='Expiry date')),
                ('remarks', models.TextField(default='')),
                ('te_serial_number', models.CharField(max_length=225, verbose_name='TE Serial Number')),
                ('te_man', models.CharField(max_length=225, verbose_name='TE Manufacturer')),
                ('te_validity_period', models.DateField(verbose_name='TE Validity Period')),
            ],
        ),
        migrations.CreateModel(
            name='CEMSData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit31_room_temperature', models.FloatField()),
                ('unit31_instrument_air_pressure', models.FloatField()),
                ('unit31_sample_flow', models.FloatField()),
                ('unit31_vacuum_pressure', models.FloatField()),
                ('unit31_chiller_temperature', models.FloatField()),
                ('unit31_heated_sample_temperature', models.FloatField()),
                ('unit31_nox_analyzer', models.FloatField()),
                ('unit31_o2_analyzer', models.FloatField()),
                ('unit31_co_analyzer', models.FloatField()),
                ('unit31_so2_analyzer', models.FloatField()),
                ('unit31_main_pm_analyzer', models.FloatField()),
                ('unit31_bypass_pm_analyzer', models.FloatField()),
                ('unit31_main_deltaflow', models.FloatField()),
                ('unit31_bypass_deltaflow', models.FloatField()),
                ('unit31_nitrogen_cylinder_pressure', models.FloatField()),
                ('unit31_so2_o2_cylinder_pressure', models.FloatField()),
                ('unit31_co_nox_cylinder_pressure', models.FloatField()),
                ('unit31_plc_status', models.BooleanField()),
                ('unit31_network_switch_status', models.BooleanField()),
                ('unit31_hmi_status', models.BooleanField()),
                ('unit31_air_condition_status', models.BooleanField()),
                ('unit32_room_temperature', models.FloatField()),
                ('unit32_instrument_air_pressure', models.FloatField()),
                ('unit32_sample_flow', models.FloatField()),
                ('unit32_vacuum_pressure', models.FloatField()),
                ('unit32_chiller_temperature', models.FloatField()),
                ('unit32_heated_sample_temperature', models.FloatField()),
                ('unit32_nox_analyzer', models.FloatField()),
                ('unit32_o2_analyzer', models.FloatField()),
                ('unit32_co_analyzer', models.FloatField()),
                ('unit32_so2_analyzer', models.FloatField()),
                ('unit32_main_pm_analyzer', models.FloatField()),
                ('unit32_bypass_pm_analyzer', models.FloatField()),
                ('unit32_main_deltaflow', models.FloatField()),
                ('unit32_bypass_deltaflow', models.FloatField()),
                ('unit32_nitrogen_cylinder_pressure', models.FloatField()),
                ('unit32_so2_o2_cylinder_pressure', models.FloatField()),
                ('unit32_co_nox_cylinder_pressure', models.FloatField()),
                ('unit32_plc_status', models.BooleanField()),
                ('unit32_network_switch_status', models.BooleanField()),
                ('unit32_hmi_status', models.BooleanField()),
                ('unit32_air_condition_status', models.BooleanField()),
                ('remarks', models.TextField()),
                ('date', models.DateField(auto_now_add=True)),
                ('time', models.TimeField(auto_now_add=True)),
                ('by', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('by', models.CharField(max_length=255)),
                ('media', models.FileField(blank=True, null=True, upload_to='gallery')),
            ],
        ),
        migrations.CreateModel(
            name='Manuals',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('manufacturer', models.CharField(max_length=255)),
                ('category', models.CharField(max_length=255)),
                ('media', models.FileField(blank=True, null=True, upload_to='gallery')),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=225, verbose_name='Email address')),
                ('phone', models.CharField(max_length=225, verbose_name='Phone number')),
                ('local', models.CharField(max_length=225, verbose_name='Local')),
                ('surname', models.CharField(default='Gideon', max_length=225, verbose_name='Surname')),
                ('firstname', models.CharField(default='Kwofie', max_length=225, verbose_name='First name')),
                ('username', models.CharField(max_length=225, unique=True, verbose_name='Username')),
                ('theme', models.CharField(default='light', max_length=225, verbose_name='Theme')),
                ('ppic', models.FileField(upload_to='admins', verbose_name='Profile picture')),
                ('admin_type', models.IntegerField(verbose_name='Admin Type')),
                ('admin_notifications', models.IntegerField(default=0, verbose_name='Admin notifications')),
                ('admin_messages', models.IntegerField(default=0, verbose_name='Admin messages')),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('last_login', models.DateField(auto_now=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('member_id', models.IntegerField(default=1, verbose_name='Admin member id')),
                ('groups', models.ManyToManyField(blank=True, related_name='admin_user_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='admin_user_set', to='auth.permission')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
